
# General MyPy configuration
[mypy]

# Use strict checks for all files, which turns on all optional checks
strict = true

# When sub-classing from a class for which no type information is available, MyPy assumes that the type of the base class is Any; although, ideally,
# we would not allow this, there are packages that do not have type stubs or a py.typed marker, therefore, we need to allow this
disallow_subclassing_any = False

# Disables the "type-abstract" error, which is too opinionated for our use case; the error is raised when assigning an abstract type to a variable or
# parameter that is of type "type[<abstract-type>]"; in CoRelAy we often use this to specify the data type of something; MyPy assumes that type
# variables will be used to instantiate objects from, so it disallows users from assigning abstract types to it; this is of course sensible, but it
# ignores the fact, that there are legitimate use cases for this: in the case of CoRelAy we only use these types to check that the specified data type
# is correct and it may be valid to assign an abstract type in this case, because we are not instantiating the type, but only using it to check the
# type of the data; I guess, the MyPy's argument is, that they cannot trace if the type will be used to instantiate an object or not, so they disallow
# this in general; however, I believe, that this is too strict and would result in a meaningful runtime error; statically disallowing things that have
# legitimate use cases, only because they may lead to runtime errors, is not a good idea; therefore, we disable this check
disable_error_code = type-abstract

# The H5PY package does not have type stubs or a py.typed marker
[mypy-h5py.*]
ignore_missing_imports = true

# The MetroHash package does not have type stubs or a py.typed marker
[mypy-metrohash.*]
ignore_missing_imports = true

# The Sphinx PyTeX plugin package does not have type stubs or a py.typed marker
[mypy-pybtex.*]
ignore_missing_imports = true

# The SciKit Learn package does not have type stubs or a py.typed marker
[mypy-sklearn.*]
ignore_missing_imports = true

# The Sphinx package does not have type stubs or a py.typed marker
[mypy-sphinx.*]
ignore_missing_imports = true
